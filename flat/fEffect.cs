// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct fEffect : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static fEffect GetRootAsfEffect(ByteBuffer _bb) { return GetRootAsfEffect(_bb, new fEffect()); }
  public static fEffect GetRootAsfEffect(ByteBuffer _bb, fEffect obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public fEffect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Class CType { get { int o = __p.__offset(4); return o != 0 ? (Class)__p.bb.GetInt(o + __p.bb_pos) : Class.Base; } }
  public int PlayerID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Vec3? Pos { get { int o = __p.__offset(8); return o != 0 ? (Vec3?)(new Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public string EffectName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetEffectNameBytes() { return __p.__vector_as_arraysegment(10); }

  public static void StartfEffect(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddCType(FlatBufferBuilder builder, Class cType) { builder.AddInt(0, (int)cType, 0); }
  public static void AddPlayerID(FlatBufferBuilder builder, int playerID) { builder.AddInt(1, playerID, 0); }
  public static void AddPos(FlatBufferBuilder builder, Offset<Vec3> posOffset) { builder.AddStruct(2, posOffset.Value, 0); }
  public static void AddEffectName(FlatBufferBuilder builder, StringOffset effectNameOffset) { builder.AddOffset(3, effectNameOffset.Value, 0); }
  public static Offset<fEffect> EndfEffect(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<fEffect>(o);
  }
};

