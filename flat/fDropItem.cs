// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct fDropItem : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static fDropItem GetRootAsfDropItem(ByteBuffer _bb) { return GetRootAsfDropItem(_bb, new fDropItem()); }
  public static fDropItem GetRootAsfDropItem(ByteBuffer _bb, fDropItem obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public fDropItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Class CType { get { int o = __p.__offset(4); return o != 0 ? (Class)__p.bb.GetInt(o + __p.bb_pos) : Class.Base; } }
  public int DID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string DName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetDNameBytes() { return __p.__vector_as_arraysegment(8); }
  public float X { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Y { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Z { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int Count { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<fDropItem> CreatefDropItem(FlatBufferBuilder builder,
      Class cType = Class.Base,
      int dID = 0,
      StringOffset dNameOffset = default(StringOffset),
      float x = 0.0f,
      float y = 0.0f,
      float z = 0.0f,
      int count = 0) {
    builder.StartObject(7);
    fDropItem.AddCount(builder, count);
    fDropItem.AddZ(builder, z);
    fDropItem.AddY(builder, y);
    fDropItem.AddX(builder, x);
    fDropItem.AddDName(builder, dNameOffset);
    fDropItem.AddDID(builder, dID);
    fDropItem.AddCType(builder, cType);
    return fDropItem.EndfDropItem(builder);
  }

  public static void StartfDropItem(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddCType(FlatBufferBuilder builder, Class cType) { builder.AddInt(0, (int)cType, 0); }
  public static void AddDID(FlatBufferBuilder builder, int dID) { builder.AddInt(1, dID, 0); }
  public static void AddDName(FlatBufferBuilder builder, StringOffset dNameOffset) { builder.AddOffset(2, dNameOffset.Value, 0); }
  public static void AddX(FlatBufferBuilder builder, float x) { builder.AddFloat(3, x, 0.0f); }
  public static void AddY(FlatBufferBuilder builder, float y) { builder.AddFloat(4, y, 0.0f); }
  public static void AddZ(FlatBufferBuilder builder, float z) { builder.AddFloat(5, z, 0.0f); }
  public static void AddCount(FlatBufferBuilder builder, int count) { builder.AddInt(6, count, 0); }
  public static Offset<fDropItem> EndfDropItem(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<fDropItem>(o);
  }
};

